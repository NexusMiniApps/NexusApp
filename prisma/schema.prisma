generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  extensions = [hstore(schema: "myHstoreSchema"), pg_trgm, postgis(version: "2.1"), uuid_ossp]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Idea {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title       String
  description String?
  dislikes    Int        @default(0)
  likes       Int        @default(0)
  event_id    String?    @db.Uuid
  Event       Event?     @relation(fields: [event_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userVotes   UserVote[]
}

model User {
  id         String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  telegramId BigInt       @unique
  firstName  String
  lastName   String?
  username   String?
  events     Event[]
  userVotes  UserVote[]
  EventRSVPs EventRSVPs[]
}

model UserVote {
  id     String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  type   VoteType
  userId String?  @db.Uuid
  ideaId String?  @db.Uuid
  idea   Idea?    @relation(fields: [ideaId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user   User?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Event {
  id          String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String
  description String?
  chatId      String       @default("")
  userId      String?      @db.Uuid
  author      User?        @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Idea        Idea[]
  EventRSVPs  EventRSVPs[]
  status      EventStatus
}

model EventRSVPs {
  id      String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  eventId String @db.Uuid
  userId  String @db.Uuid
  chatId  String

  status RSVPStatus

  event Event @relation(fields: [eventId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
}

enum VoteType {
  LIKE
  DISLIKE
}

enum EventStatus {
  PENDING
  CONFIRMED
  DELETED
  COMPLETED
}

enum RSVPStatus {
  YES
  NO
  MAYBE
}
